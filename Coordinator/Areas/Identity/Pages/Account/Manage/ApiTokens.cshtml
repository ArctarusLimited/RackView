@page
@{
    ViewData["Title"] = "API Tokens";
    ViewData["ActivePage"] = ManageNavPages.ApiTokens;
}

<h4>@ViewData["Title"]</h4>
<div class="row">
    <div class="container">
        <table class="table" id="tokenTable">
            <thead>
                <tr>
                    <th scope="col">Expiry</th>
                    <th scope="col">Notes</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
        <button class="btn btn-success" id="newTokenBtn" onclick="newToken()">New Token</button>
    </div>
</div>

<div class="modal fade" data-backdrop="static" data-keyboard="false" id="apiTokenModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">New API token</h5>
            </div>

            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="newTokenField">Token</label>
                        <input class="form-control" id="newTokenField" disabled />
                        <small class="form-text text-muted">For security reasons, this token will only be shown once.</small>
                    </div>
                    <div class="form-group">
                        <label for="newTokenExpiry">Expiry</label>
                        <input class="form-control" id="newTokenExpiry" type="datetime-local" />
                    </div>
                    <div class="form-group">
                        <label for="newTokenNotes">Notes</label>
                        <input class="form-control" id="newTokenNotes" type="text" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="apiTokenModalCreate">Create</button>
                <button type="button" class="btn btn-secondary" id="apiTokenModalCancel">Cancel</button>
            </div>
        </div>
    </div>
</div>

@Html.AntiForgeryToken()

@section Scripts {
    <partial name="_ValidationScriptsPartial"/>
    <script type="text/javascript">
        function fullRefresh() {
            $.ajax({
                url: "/Identity/Token/All",
                type: "GET",
                dataType: "json",
                headers: {
                    RequestVerificationToken:
                        $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function (data) {
                    data.forEach(addTokenToTable);
                }
            });
        }

        function addTokenToTable(token) {
            // Add the row to the table
            var row = document.getElementById("tokenTable").insertRow();
            var idRow = row.insertCell(0);
            idRow.innerHTML = token.id;
            idRow.style = "display:none;";

            if (token.expiry === undefined) {
                row.insertCell(1).innerHTML = token.expiry;
            } else {
                row.insertCell(1).innerHTML = "∞";
            }
            
            row.insertCell(2).innerHTML = token.notes;
            row.insertCell(3).innerHTML = '<button class="btn btn-danger" onclick="deleteToken(' + token.id + ')">Revoke</button>';
        }

        function newToken() {
            $.ajax({
                url: "/Identity/Token",
                type: "POST",
                dataType: "json",
                headers: {
                    RequestVerificationToken:
                        $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function (data) {
                    $('#newTokenField').val(data["token"]);
                    $('#apiTokenModal').modal('show');

                    $('#apiTokenModalCreate').click(function () {
                        data.expiry = $('#newTokenExpiry').val();
                        data.notes = $('#newTokenNotes').val();
                        updateToken(data);
                        addTokenToTable(data);

                        $('#apiTokenModalCreate').off('click');
                        $('#apiTokenModal').modal('hide');
                    });

                    $('#apiTokenModalCancel').click(function () {
                        deleteToken(data.id);

                        $('#apiTokenModalCancel').off('click');
                        $('#apiTokenModal').modal('hide');
                    });
                }
            });
        }

        function updateToken(token) {
            $.ajax({
                url: "/Identity/Token",
                type: "PUT",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(token),
                headers: {
                    RequestVerificationToken:
                        $('input:hidden[name="__RequestVerificationToken"]').val()
                }
            });
        }

        function deleteToken(id) {
            $.ajax({
                url: "/Identity/Token",
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ id: id }),
                headers: {
                    RequestVerificationToken:
                        $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function (data) {
                    $('#tokenTable tr td:contains(' + id + ')').parent().remove();
                }
            });
        }

        fullRefresh();
    </script>
}